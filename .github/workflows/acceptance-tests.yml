on:
  workflow_call:
    inputs:
      folder:
        type: string
        required: true
        description: The folder in which to run tests

env:
  AWS_REGION: us-east-2

jobs:
  acceptance-tests:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ inputs.folder }}-test-${{ github.sha }}-${{ matrix.index }}
      cancel-in-progress: false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      # Needed for pulumictl to calculate version
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.11.0
        with:
          repo: pulumi/pulumictl
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ env.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-session-name: pulumi-cdk@githubActions
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          registry-url: https://registry.npmjs.org
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
          cache-dependency-path: ./*.sum
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.13.0
      - name: Install packages
        run: yarn install --frozen-lockfile
      - name: Run build
        run: yarn run set-version && yarn run build
      - name: yarn link
        run: yarn link
      - name: set script-shell
        run: yarn config set script-shell /bin/bash
      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest
      - name: Generate go test Slice
        id: test_split
        uses: hashicorp-forge/go-test-split-action@v2.0.0
        with:
          working-directory: ${{ inputs.folder }}
          total: ${{ matrix.parallel }}
          index: ${{ matrix.index }}
      - name: Run ${{ inputs.folder }} tests
        run: cd ${{ inputs.folder }} && gotestsum --format github-actions -- -v -count=1 -timeout 2h -parallel 4 -run "${{ steps.test_split.outputs.run }}"
    strategy:
      fail-fast: false
      matrix:
        parallel: [3]
        index: [0, 1, 2]
